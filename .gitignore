#Fenics
*.h5
*.xdmf
*.pvd
*.npy
*.mesh
*.stl
*:ref.xml
output/*
outputs/*
*.out
# slurm*
*.mgz
scripts/preprocessing/chp4/outs/
outs/
mridata_3d/
braindata*
outputmask_only/
# testdata_3d/
registration/
testdata_2d/
mri2fem-dataset/
mri2fem/
data_generation/
*.tar
*.tar.gz
*.tar.gz
imageregistration_outputs/
*.png
paraview-states/
mri-preprocessing-figures/

testdata_3d/*
!testdata_3d/input8*
!testdata_3d/input.mgz
!testdata_3d/target8*
!testdata_3d/target.mgz
!testdata_3d/targetmeshsurface.stl
!testdata_3d/inputmeshsurface.stl

data/*
!data/freesurfer
data/freesurfer/*

!data/freesurfer/abby
data/freesurfer/abby/*

!data/freesurfer/abby/mri
data/freesurfer/abby/mri/*
!data/freesurfer/abby/mri/reg-ventricles-w-aq.mgz
!data/freesurfer/abby/mri/brain.mgz
!data/freesurfer/abby/mri/wmparc.mgz


!data/freesurfer/ernie
data/freesurfer/ernie/*

!data/freesurfer/ernie/mri
data/freesurfer/ernie/mri/*
!data/freesurfer/ernie/mri/brain.mgz
!data/freesurfer/ernie/mri/wmparc.mgz


!data/normalized
data/normalized/*

!data/normalized/cropped
data/normalized/cropped/files.json

!data/normalized/registered
data/normalized/registered/*
!data/normalized/registered/abbytoernie.mgz
!data/normalized/registered/abbytoernie.lta


!data/meshes
# data/meshes/*

# !data/meshes/abby
# data/meshes/abby/*
# !data/meshes/abby/brain
# data/meshes/abby/brain/*
# !data/meshes/abby/brain/abby8.xml


# !data/meshes/ernie
# data/meshes/ernie/*
# !data/meshes/ernie/brain
# data/meshes/ernie/brain/*
# !data/meshes/ernie/brain/ernie16.xml


# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class
*log_python_srun
*imageregistration_outputs/
# C extensions
*.so


# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/
