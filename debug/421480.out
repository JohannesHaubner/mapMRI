starting to run
DEBUGGING
Traceback (most recent call last):
  File "/home/bastian/Oscar-Image-Registration-via-Transport-Equation/Optimize.py", line 213, in <module>
    minimize(Jhat,  method = 'L-BFGS-B', options = {"disp": True, "maxiter": maxlbfgsiter}, tol=1e-08, callback = cb)
  File "/home/bastian/.conda/envs/mri_inverse/lib/python3.9/site-packages/pyadjoint/tape.py", line 46, in wrapper
    return function(*args, **kwargs)
  File "/home/bastian/.conda/envs/mri_inverse/lib/python3.9/site-packages/pyadjoint/optimization/optimization.py", line 252, in minimize
    opt = algorithm(rf_np, **kwargs)
  File "/home/bastian/.conda/envs/mri_inverse/lib/python3.9/site-packages/pyadjoint/optimization/optimization.py", line 135, in minimize_scipy_generic
    res = scipy_minimize(J, m_global, method=method, **kwargs)
  File "/home/bastian/.conda/envs/mri_inverse/lib/python3.9/site-packages/scipy/optimize/_minimize.py", line 623, in minimize
    return _minimize_lbfgsb(fun, x0, args, jac, bounds,
  File "/home/bastian/.conda/envs/mri_inverse/lib/python3.9/site-packages/scipy/optimize/lbfgsb.py", line 360, in _minimize_lbfgsb
    f, g = func_and_grad(x)
  File "/home/bastian/.conda/envs/mri_inverse/lib/python3.9/site-packages/scipy/optimize/_differentiable_functions.py", line 268, in fun_and_grad
    self._update_grad()
  File "/home/bastian/.conda/envs/mri_inverse/lib/python3.9/site-packages/scipy/optimize/_differentiable_functions.py", line 238, in _update_grad
    self._update_grad_impl()
  File "/home/bastian/.conda/envs/mri_inverse/lib/python3.9/site-packages/scipy/optimize/_differentiable_functions.py", line 149, in update_grad
    self.g = grad_wrapped(self.x)
  File "/home/bastian/.conda/envs/mri_inverse/lib/python3.9/site-packages/scipy/optimize/_differentiable_functions.py", line 146, in grad_wrapped
    return np.atleast_1d(grad(np.copy(x), *args))
  File "/home/bastian/.conda/envs/mri_inverse/lib/python3.9/site-packages/pyadjoint/optimization/optimization.py", line 66, in <lambda>
    dJ = lambda m: rf_np.derivative(m, forget=forget, project=project)
  File "/home/bastian/.conda/envs/mri_inverse/lib/python3.9/site-packages/pyadjoint/tape.py", line 46, in wrapper
    return function(*args, **kwargs)
  File "/home/bastian/.conda/envs/mri_inverse/lib/python3.9/site-packages/pyadjoint/reduced_functional_numpy.py", line 70, in derivative
    dJdm = self.rf.derivative()
  File "/home/bastian/.conda/envs/mri_inverse/lib/python3.9/site-packages/pyadjoint/reduced_functional.py", line 61, in derivative
    derivatives = compute_gradient(self.functional,
  File "/home/bastian/.conda/envs/mri_inverse/lib/python3.9/site-packages/pyadjoint/drivers.py", line 29, in compute_gradient
    tape.evaluate_adj(markings=True)
  File "/home/bastian/.conda/envs/mri_inverse/lib/python3.9/site-packages/pyadjoint/tape.py", line 156, in evaluate_adj
    self._blocks[i].evaluate_adj(markings=markings)
  File "/home/bastian/.conda/envs/mri_inverse/lib/python3.9/site-packages/pyadjoint/tape.py", line 46, in wrapper
    return function(*args, **kwargs)
  File "/home/bastian/.conda/envs/mri_inverse/lib/python3.9/site-packages/pyadjoint/block.py", line 128, in evaluate_adj
    prepared = self.prepare_evaluate_adj(inputs, adj_inputs, relevant_dependencies)
  File "/home/bastian/.conda/envs/mri_inverse/lib/python3.9/site-packages/dolfin_adjoint_common/blocks/solving.py", line 146, in prepare_evaluate_adj
    adj_sol, adj_sol_bdy = self._assemble_and_solve_adj_eq(dFdu_form, dJdu, compute_bdy)
  File "/home/bastian/.conda/envs/mri_inverse/lib/python3.9/site-packages/fenics_adjoint/blocks/krylov_solver.py", line 90, in _assemble_and_solve_adj_eq
    solver.solve(adj_sol.vector(), dJdu)
RuntimeError: 

*** -------------------------------------------------------------------------
*** DOLFIN encountered an error. If you are not able to resolve this issue
*** using the information listed below, you can ask for help at
***
***     fenics-support@googlegroups.com
***
*** Remember to include the error message listed below and, if possible,
*** include a *minimal* running example to reproduce the error.
***
*** -------------------------------------------------------------------------
*** Error:   Unable to solve linear system using PETSc Krylov solver.
*** Reason:  Solution failed to converge in 10000 iterations (PETSc reason DIVERGED_ITS, residual norm ||r|| = 3.497645e+00).
*** Where:   This error was encountered inside PETScKrylovSolver.cpp.
*** Process: 0
*** 
*** DOLFIN version: 2019.1.0
*** Git changeset:  149cf7bbfffe157a560d262289a63cfe2d1e7244
*** -------------------------------------------------------------------------

 This problem is unconstrained.
