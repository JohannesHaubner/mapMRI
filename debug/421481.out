starting to run
DEBUGGING
Traceback (most recent call last):
  File "/home/bastian/Oscar-Image-Registration-via-Transport-Equation/Optimize.py", line 213, in <module>
    minimize(Jhat,  method = 'L-BFGS-B', options = {"disp": True, "maxiter": maxlbfgsiter}, tol=1e-08, callback = cb)
  File "/home/bastian/.conda/envs/mri_inverse/lib/python3.9/site-packages/pyadjoint/tape.py", line 46, in wrapper
    return function(*args, **kwargs)
  File "/home/bastian/.conda/envs/mri_inverse/lib/python3.9/site-packages/pyadjoint/optimization/optimization.py", line 252, in minimize
    opt = algorithm(rf_np, **kwargs)
  File "/home/bastian/.conda/envs/mri_inverse/lib/python3.9/site-packages/pyadjoint/optimization/optimization.py", line 135, in minimize_scipy_generic
    res = scipy_minimize(J, m_global, method=method, **kwargs)
  File "/home/bastian/.conda/envs/mri_inverse/lib/python3.9/site-packages/scipy/optimize/_minimize.py", line 623, in minimize
    return _minimize_lbfgsb(fun, x0, args, jac, bounds,
  File "/home/bastian/.conda/envs/mri_inverse/lib/python3.9/site-packages/scipy/optimize/lbfgsb.py", line 360, in _minimize_lbfgsb
    f, g = func_and_grad(x)
  File "/home/bastian/.conda/envs/mri_inverse/lib/python3.9/site-packages/scipy/optimize/_differentiable_functions.py", line 267, in fun_and_grad
    self._update_fun()
  File "/home/bastian/.conda/envs/mri_inverse/lib/python3.9/site-packages/scipy/optimize/_differentiable_functions.py", line 233, in _update_fun
    self._update_fun_impl()
  File "/home/bastian/.conda/envs/mri_inverse/lib/python3.9/site-packages/scipy/optimize/_differentiable_functions.py", line 137, in update_fun
    self.f = fun_wrapped(self.x)
  File "/home/bastian/.conda/envs/mri_inverse/lib/python3.9/site-packages/scipy/optimize/_differentiable_functions.py", line 134, in fun_wrapped
    return fun(np.copy(x), *args)
  File "/home/bastian/.conda/envs/mri_inverse/lib/python3.9/site-packages/pyadjoint/reduced_functional_numpy.py", line 36, in __call__
    return self.rf.__call__(self.set_local(m_copies, m_array))
  File "/home/bastian/.conda/envs/mri_inverse/lib/python3.9/site-packages/pyadjoint/tape.py", line 46, in wrapper
    return function(*args, **kwargs)
  File "/home/bastian/.conda/envs/mri_inverse/lib/python3.9/site-packages/pyadjoint/reduced_functional.py", line 135, in __call__
    blocks[i].recompute()
  File "/home/bastian/.conda/envs/mri_inverse/lib/python3.9/site-packages/pyadjoint/block.py", line 350, in recompute
    output = self.recompute_component(inputs,
  File "/home/bastian/.conda/envs/mri_inverse/lib/python3.9/site-packages/dolfin_adjoint_common/blocks/solving.py", line 467, in recompute_component
    return self._forward_solve(lhs, rhs, func, bcs)
  File "/home/bastian/.conda/envs/mri_inverse/lib/python3.9/site-packages/fenics_adjoint/blocks/krylov_solver.py", line 132, in _forward_solve
    solver.solve(func.vector(), b)
RuntimeError: 

*** -------------------------------------------------------------------------
*** DOLFIN encountered an error. If you are not able to resolve this issue
*** using the information listed below, you can ask for help at
***
***     fenics-support@googlegroups.com
***
*** Remember to include the error message listed below and, if possible,
*** include a *minimal* running example to reproduce the error.
***
*** -------------------------------------------------------------------------
*** Error:   Unable to solve linear system using PETSc Krylov solver.
*** Reason:  Solution failed to converge in 0 iterations (PETSc reason DIVERGED_NANORINF, residual norm ||r|| = -1.000000e+00).
*** Where:   This error was encountered inside PETScKrylovSolver.cpp.
*** Process: 0
*** 
*** DOLFIN version: 2019.1.0
*** Git changeset:  149cf7bbfffe157a560d262289a63cfe2d1e7244
*** -------------------------------------------------------------------------

 This problem is unconstrained.
